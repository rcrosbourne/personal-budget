<?php

/**
 * @file
 * Provides an income source entity type.
 */

use Drupal\Core\Render\Element;
use Drupal\personal_budget_tracker\Entity\IncomeSource;
use Drupal\user\UserInterface;

/**
 * Implements hook_theme().
 */
function personal_budget_tracker_theme() {
  return [
    'income_source' => [
      'render element' => 'elements',
    ],
    'monthly_expense' => [
      'render element' => 'elements',
    ],
    'monthly_budget' => [
      'render element' => 'elements',
    ],
    'field_multiple_value_form' => [
      'template' => 'field-multiple-value-form'
    ]
  ];
}

/**
 * Implements hook_form_alter().
 */
function personal_budget_tracker_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  // remove revision log
  if ($form_id == 'income_source_add_form') {
    $form['revision_log']['#access'] = FALSE;
  }
}


/**
 * Prepares variables for income source templates.
 *
 * Default template: income-source.html.twig.
 *
 * @param  array  $variables
 *     An associative array containing:
 *     - elements: An associative array containing the income source
 *     information and any fields attached to the entity.
 *     - attributes: HTML attributes for the containing element.
 */
function template_preprocess_income_source(array &$variables) {
  $variables['view_mode'] = $variables['elements']['#view_mode'];
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
}

/**
 * Implements hook_user_cancel().
 */
function personal_budget_tracker_user_cancel($edit, UserInterface $account, $method) {
  switch ($method) {
    case 'user_cancel_reassign':
      // Anonymize income sources.
      $storage = \Drupal::entityTypeManager()->getStorage('income_source');
      $income_source_ids = $storage->getQuery()
        ->condition('uid', $account->id())
        ->execute();
      foreach ($storage->loadMultiple($income_source_ids) as $income_source) {
        $income_source->setOwnerId(0);
        $income_source->save();
      }
      break;
  }
}

/**
 * Implements hook_ENTITY_TYPE_predelete() for user entities.
 */
function personal_budget_tracker_user_predelete(UserInterface $account) {
  // Delete income sources.
  $storage = \Drupal::entityTypeManager()->getStorage('income_source');
  $income_source_ids = $storage->getQuery()
    ->condition('uid', $account->id())
    ->execute();
  $income_sources = $storage->loadMultiple($income_source_ids);
  $storage->delete($income_sources);
  // Delete old revisions.
  $income_source_ids = $storage->getQuery()
    ->allRevisions()
    ->condition('uid', $account->id())
    ->execute();
  foreach (array_keys($income_source_ids) as $revision_id) {
    $storage->deleteRevision($revision_id);
  }
  $storage = \Drupal::entityTypeManager()->getStorage('monthly_expense');
  $monthly_expense_ids = $storage->getQuery()
    ->condition('uid', $account->id())
    ->execute();
  $monthly_expenses = $storage->loadMultiple($monthly_expense_ids);
  $storage->delete($monthly_expenses);

  // Delete monthly budgets.
  $storage = \Drupal::entityTypeManager()->getStorage('monthly_budget');
  $monthly_budget_ids = $storage->getQuery()
    ->condition('uid', $account->id())
    ->execute();
  $monthly_budgets = $storage->loadMultiple($monthly_budget_ids);
  $storage->delete($monthly_budgets);
}

/**
 * Prepares variables for monthly expense templates.
 *
 * Default template: monthly-expense.html.twig.
 *
 * @param  array  $variables
 *     An associative array containing:
 *     - elements: An associative array containing the monthly expense
 *     information and any fields attached to the entity.
 *     - attributes: HTML attributes for the containing element.
 */
function template_preprocess_monthly_expense(array &$variables) {
  $variables['view_mode'] = $variables['elements']['#view_mode'];
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
}


/**
 * Prepares variables for monthly budget templates.
 *
 * Default template: monthly-budget.html.twig.
 *
 * @param  array  $variables
 *     An associative array containing:
 *     - elements: An associative array containing the monthly budget
 *     information and any fields attached to the entity.
 *     - attributes: HTML attributes for the containing element.
 */
function template_preprocess_monthly_budget(array &$variables) {
  $variables['view_mode'] = $variables['elements']['#view_mode'];
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
  $monthlyBudget = $variables['elements']['#monthly_budget'];
  $variables['monthly_budget'] = $monthlyBudget;
}
